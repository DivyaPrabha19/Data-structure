#include <stdio.h>
#include <ctype.h>

#define MAX_EXPR 100

char stack[MAX_EXPR];
int top = -1;

int precedence(char op) {
    if (op == '+' || op == '-') return 1;
    if (op == '*' || op == '/') return 2;
    return 0;
}

void push(char op) {
    stack[++top] = op;
}

char pop() {
    return stack[top--];
}

void infixToPostfix(char *expr) {
    char result[MAX_EXPR];
    int j = 0;

    for (int i = 0; expr[i] != '\0'; i++) {
        if (isdigit(expr[i])) {
            result[j++] = expr[i];
        } else if (expr[i] == '(') {
            push(expr[i]);
        } else if (expr[i] == ')') {
            while (top != -1 && stack[top] != '(') {
                result[j++] = pop();
            }
            pop(); // Pop '('
        } else {
            while (top != -1 && precedence(stack[top]) >= precedence(expr[i])) {
                result[j++] = pop();
            }
            push(expr[i]);
        }
    }

    while (top != -1) {
        result[j++] = pop();
    }

    result[j] = '\0';
    printf("Postfix Expression: %s\n", result);
}

int main() {
    char expr[] = "3+(2*5)-8";
    infixToPostfix(expr);
    return 0;
}
OUTPUT:
Postfix Expression: 325*+8-
